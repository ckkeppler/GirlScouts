{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, END, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinColor, mixinDisabled, mixinTabIndex, GestureConfig, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n  @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\nconst _c0 = [\"sliderWrapper\"];\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** *\n * The thumb gap size for a disabled slider.\n  @type {?} */\nconst DISABLED_THUMB_GAP = 7;\n/** *\n * The thumb gap size for a non-active slider at its minimum value.\n  @type {?} */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** *\n * The thumb gap size for an active slider at its minimum value.\n  @type {?} */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/** *\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n  @type {?} */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\nclass MatSliderChange {}\n/**\n * \\@docs-private\n */\nclass MatSliderBase {\n  /**\n   * @param {?} _elementRef\n   */\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}\n/** @type {?} */\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n  /**\n   * @param {?} elementRef\n   * @param {?} _focusMonitor\n   * @param {?} _changeDetectorRef\n   * @param {?} _dir\n   * @param {?} tabIndex\n   * @param {?=} _animationMode\n   */\n  constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex,\n  // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n  _animationMode) {\n    super(elementRef);\n    this._focusMonitor = _focusMonitor;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dir = _dir;\n    this._animationMode = _animationMode;\n    this._invert = false;\n    this._max = 100;\n    this._min = 0;\n    this._step = 1;\n    this._thumbLabel = false;\n    this._tickInterval = 0;\n    this._value = null;\n    this._vertical = false;\n    /**\n     * Event emitted when the slider value has changed.\n     */\n    this.change = new EventEmitter();\n    /**\n     * Event emitted when the slider thumb moves.\n     */\n    this.input = new EventEmitter();\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     */\n    this.valueChange = new EventEmitter();\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     */\n    this.onTouched = () => {};\n    this._percent = 0;\n    /**\n     * Whether or not the thumb is sliding.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     */\n    this._isSliding = false;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     */\n    this._isActive = false;\n    /**\n     * The size of a tick interval as a percentage of the size of the track.\n     */\n    this._tickIntervalPercent = 0;\n    /**\n     * The dimensions of the slider.\n     */\n    this._sliderDimensions = null;\n    this._controlValueAccessorChangeFn = () => {};\n    /**\n     * Subscription to the Directionality change EventEmitter.\n     */\n    this._dirChangeSubscription = Subscription.EMPTY;\n    this.tabIndex = parseInt(tabIndex) || 0;\n  }\n  /**\n   * Whether the slider is inverted.\n   * @return {?}\n   */\n  get invert() {\n    return this._invert;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set invert(value) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  /**\n   * The maximum value that the slider can have.\n   * @return {?}\n   */\n  get max() {\n    return this._max;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set max(v) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * The minimum value that the slider can have.\n   * @return {?}\n   */\n  get min() {\n    return this._min;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set min(v) {\n    this._min = coerceNumberProperty(v, this._min);\n    // If the value wasn't explicitly set by the user, set it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    this._percent = this._calculatePercentage(this._value);\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * The values at which the thumb will snap.\n   * @return {?}\n   */\n  get step() {\n    return this._step;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set step(v) {\n    this._step = coerceNumberProperty(v, this._step);\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal = /** @type {?} */this._step.toString().split('.').pop().length;\n    }\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Whether or not to show the thumb label.\n   * @return {?}\n   */\n  get thumbLabel() {\n    return this._thumbLabel;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set thumbLabel(value) {\n    this._thumbLabel = coerceBooleanProperty(value);\n  }\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   * @return {?}\n   */\n  get tickInterval() {\n    return this._tickInterval;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set tickInterval(value) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, /** @type {?} */this._tickInterval);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  /**\n   * Value of the slider.\n   * @return {?}\n   */\n  get value() {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set value(v) {\n    if (v !== this._value) {\n      /** @type {?} */\n      let value = coerceNumberProperty(v);\n      // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n      if (this._roundToDecimal) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value);\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Whether the slider is vertical.\n   * @return {?}\n   */\n  get vertical() {\n    return this._vertical;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  /**\n   * The value to be used for display purposes.\n   * @return {?}\n   */\n  get displayValue() {\n    if (this.displayWith) {\n      return this.displayWith(this.value);\n    }\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n    return this.value || 0;\n  }\n  /**\n   * set focus to the host element\n   * @return {?}\n   */\n  focus() {\n    this._focusHostElement();\n  }\n  /**\n   * blur the host element\n   * @return {?}\n   */\n  blur() {\n    this._blurHostElement();\n  }\n  /**\n   * The percentage of the slider that coincides with the value.\n   * @return {?}\n   */\n  get percent() {\n    return this._clamp(this._percent);\n  }\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   * @return {?}\n   */\n  get _invertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n  /**\n   * Whether the slider is at its minimum value.\n   * @return {?}\n   */\n  get _isMinValue() {\n    return this.percent === 0;\n  }\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   * @return {?}\n   */\n  get _thumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n  /**\n   * CSS styles for the track background element.\n   * @return {?}\n   */\n  get _trackBackgroundStyles() {\n    /** @type {?} */\n    const axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    /** @type {?} */\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n    };\n  }\n  /**\n   * CSS styles for the track fill element.\n   * @return {?}\n   */\n  get _trackFillStyles() {\n    /** @type {?} */\n    const axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n    const scale = this.vertical ? `1, ${this.percent}, 1` : `${this.percent}, 1, 1`;\n    /** @type {?} */\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n    };\n  }\n  /**\n   * CSS styles for the ticks container element.\n   * @return {?}\n   */\n  get _ticksContainerStyles() {\n    /** @type {?} */\n    let axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    /** @type {?} */\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n  /**\n   * CSS styles for the ticks element.\n   * @return {?}\n   */\n  get _ticksStyles() {\n    /** @type {?} */\n    let tickSize = this._tickIntervalPercent * 100;\n    /** @type {?} */\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    /** @type {?} */\n    let axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    /** @type {?} */\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    /** @type {?} */\n    let styles = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n    if (this._isMinValue && this._thumbGap) {\n      /** @type {?} */\n      let side = this.vertical ? this._invertAxis ? 'Bottom' : 'Top' : this._invertAxis ? 'Right' : 'Left';\n      styles[`padding${side}`] = `${this._thumbGap}px`;\n    }\n    return styles;\n  }\n  /**\n   * @return {?}\n   */\n  get _thumbContainerStyles() {\n    /** @type {?} */\n    let axis = this.vertical ? 'Y' : 'X';\n    /** @type {?} */\n    let invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !this._invertAxis : this._invertAxis;\n    /** @type {?} */\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   * @return {?}\n   */\n  _shouldInvertMouseCoords() {\n    return this._getDirection() == 'rtl' && !this.vertical ? !this._invertAxis : this._invertAxis;\n  }\n  /**\n   * The language direction for this slider element.\n   * @return {?}\n   */\n  _getDirection() {\n    return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      this._isActive = !!origin && origin !== 'keyboard';\n      this._changeDetectorRef.detectChanges();\n    });\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._dirChangeSubscription.unsubscribe();\n  }\n  /**\n   * @return {?}\n   */\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _onMousedown(event) {\n    if (this.disabled) {\n      return;\n    }\n    /** @type {?} */\n    const oldValue = this.value;\n    this._isSliding = false;\n    this._focusHostElement();\n    this._updateValueFromPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n    // Emit a change and input event if the value changed.\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _onSlide(event) {\n    if (this.disabled) {\n      return;\n    }\n    // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n    // state, call the slide start handler manually.\n    if (!this._isSliding) {\n      this._onSlideStart(null);\n    }\n    // Prevent the slide from selecting anything else.\n    event.preventDefault();\n    /** @type {?} */\n    let oldValue = this.value;\n    this._updateValueFromPosition({\n      x: event.center.x,\n      y: event.center.y\n    });\n    // Native range elements always emit `input` events when the value changed while sliding.\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n    }\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _onSlideStart(event) {\n    if (this.disabled || this._isSliding) {\n      return;\n    }\n    // Simulate mouseenter in case this is a mobile device.\n    this._onMouseenter();\n    this._isSliding = true;\n    this._focusHostElement();\n    this._valueOnSlideStart = this.value;\n    if (event) {\n      this._updateValueFromPosition({\n        x: event.center.x,\n        y: event.center.y\n      });\n      event.preventDefault();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _onSlideEnd() {\n    this._isSliding = false;\n    if (this._valueOnSlideStart != this.value && !this.disabled) {\n      this._emitChangeEvent();\n    }\n    this._valueOnSlideStart = null;\n  }\n  /**\n   * @return {?}\n   */\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n  /**\n   * @return {?}\n   */\n  _onBlur() {\n    this.onTouched();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  _onKeydown(event) {\n    if (this.disabled) {\n      return;\n    }\n    /** @type {?} */\n    let oldValue = this.value;\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n    this._isSliding = true;\n    event.preventDefault();\n  }\n  /**\n   * @return {?}\n   */\n  _onKeyup() {\n    this._isSliding = false;\n  }\n  /**\n   * Increments the slider by the given number of steps (negative number decrements).\n   * @param {?} numSteps\n   * @return {?}\n   */\n  _increment(numSteps) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n  /**\n   * Calculate the new value from the new physical location. The value will always be snapped.\n   * @param {?} pos\n   * @return {?}\n   */\n  _updateValueFromPosition(pos) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n    /** @type {?} */\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    /** @type {?} */\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    /** @type {?} */\n    let posComponent = this.vertical ? pos.y : pos.x;\n    /** @type {?} */\n    let percent = this._clamp((posComponent - offset) / size);\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    }\n    // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      /** @type {?} */\n      const exactValue = this._calculateValue(percent);\n      /** @type {?} */\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n      // The value needs to snap to the min and max.\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n  /**\n   * Emits a change event if the current value is different from the last emitted value.\n   * @return {?}\n   */\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n  /**\n   * Emits an input event when the current value is different from the last emitted value.\n   * @return {?}\n   */\n  _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n  /**\n   * Updates the amount of space between ticks as a percentage of the width of the slider.\n   * @return {?}\n   */\n  _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n    if (this.tickInterval == 'auto') {\n      /** @type {?} */\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      /** @type {?} */\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      /** @type {?} */\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      /** @type {?} */\n      let pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n  /**\n   * Creates a slider change object from the specified value.\n   * @param {?=} value\n   * @return {?}\n   */\n  _createChangeEvent(value = this.value) {\n    /** @type {?} */\n    let event = new MatSliderChange();\n    event.source = this;\n    event.value = value;\n    return event;\n  }\n  /**\n   * Calculates the percentage of the slider that a value is.\n   * @param {?} value\n   * @return {?}\n   */\n  _calculatePercentage(value) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n  /**\n   * Calculates the value a percentage of the slider corresponds to.\n   * @param {?} percentage\n   * @return {?}\n   */\n  _calculateValue(percentage) {\n    return this.min + percentage * (this.max - this.min);\n  }\n  /**\n   * Return a number between two numbers.\n   * @param {?} value\n   * @param {?=} min\n   * @param {?=} max\n   * @return {?}\n   */\n  _clamp(value, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   * @return {?}\n   */\n  _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   * @return {?}\n   */\n  _focusHostElement() {\n    this._elementRef.nativeElement.focus();\n  }\n  /**\n   * Blurs the native element.\n   * @return {?}\n   */\n  _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param {?} value\n   * @return {?}\n   */\n  writeValue(value) {\n    this.value = value;\n  }\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} fn Callback to be registered.\n   * @return {?}\n   */\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} fn Callback to be registered.\n   * @return {?}\n   */\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param {?} isDisabled\n   * @return {?}\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) {\n  return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatSlider.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSlider,\n  selectors: [[\"mat-slider\"]],\n  viewQuery: function MatSlider_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\"],\n  hostVars: 26,\n  hostBindings: function MatSlider_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() {\n        return ctx._onFocus();\n      })(\"blur\", function MatSlider_blur_HostBindingHandler() {\n        return ctx._onBlur();\n      })(\"mousedown\", function MatSlider_mousedown_HostBindingHandler($event) {\n        return ctx._onMousedown($event);\n      })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) {\n        return ctx._onKeydown($event);\n      })(\"keyup\", function MatSlider_keyup_HostBindingHandler() {\n        return ctx._onKeyup();\n      })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() {\n        return ctx._onMouseenter();\n      })(\"slide\", function MatSlider_slide_HostBindingHandler($event) {\n        return ctx._onSlide($event);\n      })(\"slideend\", function MatSlider_slideend_HostBindingHandler() {\n        return ctx._onSlideEnd();\n      })(\"slidestart\", function MatSlider_slidestart_HostBindingHandler($event) {\n        return ctx._onSlideStart($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n      ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    color: \"color\",\n    tabIndex: \"tabIndex\",\n    invert: \"invert\",\n    max: \"max\",\n    min: \"min\",\n    value: \"value\",\n    step: \"step\",\n    thumbLabel: \"thumbLabel\",\n    tickInterval: \"tickInterval\",\n    vertical: \"vertical\",\n    displayWith: \"displayWith\"\n  },\n  outputs: {\n    change: \"change\",\n    input: \"input\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"matSlider\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]],\n  template: function MatSlider_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n      ɵngcc0.ɵɵelement(3, \"div\", 3)(4, \"div\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵelement(6, \"div\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n      ɵngcc0.ɵɵelement(8, \"div\", 8)(9, \"div\", 9);\n      ɵngcc0.ɵɵelementStart(10, \"div\", 10)(11, \"span\", 11);\n      ɵngcc0.ɵɵtext(12);\n      ɵngcc0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    }\n  },\n  dependencies: [ɵngcc3.NgStyle],\n  styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatSlider.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: FocusMonitor\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Attribute,\n    args: ['tabindex']\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatSlider.propDecorators = {\n  invert: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  thumbLabel: [{\n    type: Input\n  }],\n  tickInterval: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  displayWith: [{\n    type: Input\n  }],\n  vertical: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  input: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  _sliderWrapper: [{\n    type: ViewChild,\n    args: ['sliderWrapper']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n    type: Component,\n    args: [{\n      selector: 'mat-slider',\n      exportAs: 'matSlider',\n      providers: [MAT_SLIDER_VALUE_ACCESSOR],\n      host: {\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(mousedown)': '_onMousedown($event)',\n        '(keydown)': '_onKeydown($event)',\n        '(keyup)': '_onKeyup()',\n        '(mouseenter)': '_onMouseenter()',\n        '(slide)': '_onSlide($event)',\n        '(slideend)': '_onSlideEnd()',\n        '(slidestart)': '_onSlideStart($event)',\n        'class': 'mat-slider',\n        'role': 'slider',\n        '[tabIndex]': 'tabIndex',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuemin]': 'min',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mat-slider-disabled]': 'disabled',\n        '[class.mat-slider-has-ticks]': 'tickInterval',\n        '[class.mat-slider-horizontal]': '!vertical',\n        '[class.mat-slider-axis-inverted]': '_invertAxis',\n        '[class.mat-slider-sliding]': '_isSliding',\n        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n        '[class.mat-slider-vertical]': 'vertical',\n        '[class.mat-slider-min-value]': '_isMinValue',\n        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper><div class=\\\"mat-slider-track-wrapper\\\"><div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div><div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div></div><div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\"><div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div></div><div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\"><div class=\\\"mat-slider-focus-ring\\\"></div><div class=\\\"mat-slider-thumb\\\"></div><div class=\\\"mat-slider-thumb-label\\\"><span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span></div></div></div>\",\n      inputs: ['disabled', 'color', 'tabIndex'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc2.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    change: [{\n      type: Output\n    }],\n    input: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    invert: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    thumbLabel: [{\n      type: Input\n    }],\n    tickInterval: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input\n    }],\n    displayWith: [{\n      type: Input\n    }],\n    _sliderWrapper: [{\n      type: ViewChild,\n      args: ['sliderWrapper']\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatSliderModule {}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) {\n  return new (t || MatSliderModule)();\n};\nMatSliderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatSliderModule\n});\nMatSliderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: HAMMER_GESTURE_CONFIG,\n    useClass: GestureConfig\n  }],\n  imports: [CommonModule, MatCommonModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule],\n      exports: [MatSlider, MatCommonModule],\n      declarations: [MatSlider],\n      providers: [{\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: GestureConfig\n      }]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, {\n    declarations: function () {\n      return [MatSlider];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule];\n    },\n    exports: function () {\n      return [MatSlider, MatCommonModule];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatSliderModule, MAT_SLIDER_VALUE_ACCESSOR, MatSliderChange, MatSliderBase, _MatSliderMixinBase, MatSlider };","map":{"version":3,"names":["FocusMonitor","Directionality","coerceBooleanProperty","coerceNumberProperty","DOWN_ARROW","END","HOME","LEFT_ARROW","PAGE_DOWN","PAGE_UP","RIGHT_ARROW","UP_ARROW","Attribute","ChangeDetectionStrategy","ChangeDetectorRef","Component","ElementRef","EventEmitter","forwardRef","Inject","Input","Optional","Output","ViewChild","ViewEncapsulation","NgModule","NG_VALUE_ACCESSOR","mixinColor","mixinDisabled","mixinTabIndex","GestureConfig","MatCommonModule","ANIMATION_MODULE_TYPE","Subscription","CommonModule","HAMMER_GESTURE_CONFIG","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","provide","useExisting","MatSlider","multi","MatSliderChange","MatSliderBase","constructor","_elementRef","_MatSliderMixinBase","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","parseInt","invert","value","max","v","_calculatePercentage","markForCheck","min","step","_roundToDecimal","toString","split","pop","length","thumbLabel","tickInterval","parseFloat","toFixed","vertical","displayValue","displayWith","focus","_focusHostElement","blur","_blurHostElement","percent","_clamp","_invertAxis","_isMinValue","_thumbGap","disabled","_trackBackgroundStyles","axis","scale","sign","_shouldInvertMouseCoords","transform","_trackFillStyles","_ticksContainerStyles","_getDirection","offset","_ticksStyles","tickSize","backgroundSize","rotate","styles","side","_thumbContainerStyles","invertOffset","ngOnInit","monitor","subscribe","origin","detectChanges","ngOnDestroy","stopMonitoring","unsubscribe","_onMouseenter","_getSliderDimensions","_updateTickIntervalPercent","_onMousedown","event","oldValue","_updateValueFromPosition","x","clientX","y","clientY","_emitInputEvent","_emitChangeEvent","_onSlide","_onSlideStart","preventDefault","center","_valueOnSlideStart","_onSlideEnd","_onFocus","_onBlur","_onKeydown","keyCode","_increment","_onKeyup","numSteps","pos","top","left","size","height","width","posComponent","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","source","percentage","_sliderWrapper","nativeElement","getBoundingClientRect","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ɵfac","MatSlider_Factory","t","ɵɵdirectiveInject","ɵɵinjectAttribute","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatSlider_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatSlider_HostBindings","ɵɵlistener","MatSlider_focus_HostBindingHandler","MatSlider_blur_HostBindingHandler","MatSlider_mousedown_HostBindingHandler","$event","MatSlider_keydown_HostBindingHandler","MatSlider_keyup_HostBindingHandler","MatSlider_mouseenter_HostBindingHandler","MatSlider_slide_HostBindingHandler","MatSlider_slideend_HostBindingHandler","MatSlider_slidestart_HostBindingHandler","ɵɵhostProperty","ɵɵattribute","ɵɵclassProp","inputs","color","outputs","exportAs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatSlider_Template","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","dependencies","NgStyle","encapsulation","changeDetection","ctorParameters","decorators","String","args","propDecorators","ngDevMode","ɵsetClassMetadata","selector","providers","host","None","OnPush","MatSliderModule","MatSliderModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","useClass","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"sources":["/Users/chriskeppler/Projects/Client/node_modules/@angular/material/__ivy_ngcc__/esm2015/slider.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, END, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Inject, Input, Optional, Output, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinColor, mixinDisabled, mixinTabIndex, GestureConfig, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n  @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** *\n * The thumb gap size for a disabled slider.\n  @type {?} */\nconst DISABLED_THUMB_GAP = 7;\n/** *\n * The thumb gap size for a non-active slider at its minimum value.\n  @type {?} */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** *\n * The thumb gap size for an active slider at its minimum value.\n  @type {?} */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/** *\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n  @type {?} */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\nclass MatSliderChange {\n}\n/**\n * \\@docs-private\n */\nclass MatSliderBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} tabIndex\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, \n    // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n    _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /**\n         * Event emitted when the slider value has changed.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the slider thumb moves.\n         */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /**\n         * The size of a tick interval as a percentage of the size of the track.\n         */\n        this._tickIntervalPercent = 0;\n        /**\n         * The dimensions of the slider.\n         */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * Subscription to the Directionality change EventEmitter.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slider is inverted.\n     * @return {?}\n     */\n    get invert() { return this._invert; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /**\n     * The maximum value that the slider can have.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The minimum value that the slider can have.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The values at which the thumb will snap.\n     * @return {?}\n     */\n    get step() { return this._step; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = /** @type {?} */ ((this._step.toString().split('.').pop())).length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether or not to show the thumb label.\n     * @return {?}\n     */\n    get thumbLabel() { return this._thumbLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     * @return {?}\n     */\n    get tickInterval() { return this._tickInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, /** @type {?} */ (this._tickInterval));\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /**\n     * Value of the slider.\n     * @return {?}\n     */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (v !== this._value) {\n            /** @type {?} */\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the slider is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * The value to be used for display purposes.\n     * @return {?}\n     */\n    get displayValue() {\n        if (this.displayWith) {\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /**\n     * set focus to the host element\n     * @return {?}\n     */\n    focus() {\n        this._focusHostElement();\n    }\n    /**\n     * blur the host element\n     * @return {?}\n     */\n    blur() {\n        this._blurHostElement();\n    }\n    /**\n     * The percentage of the slider that coincides with the value.\n     * @return {?}\n     */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     * @return {?}\n     */\n    get _invertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /**\n     * Whether the slider is at its minimum value.\n     * @return {?}\n     */\n    get _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     * @return {?}\n     */\n    get _thumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /**\n     * CSS styles for the track background element.\n     * @return {?}\n     */\n    get _trackBackgroundStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the track fill element.\n     * @return {?}\n     */\n    get _trackFillStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${this.percent}, 1` : `${this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the ticks container element.\n     * @return {?}\n     */\n    get _ticksContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        /** @type {?} */\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /**\n     * CSS styles for the ticks element.\n     * @return {?}\n     */\n    get _ticksStyles() {\n        /** @type {?} */\n        let tickSize = this._tickIntervalPercent * 100;\n        /** @type {?} */\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        /** @type {?} */\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        /** @type {?} */\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue && this._thumbGap) {\n            /** @type {?} */\n            let side = this.vertical ?\n                (this._invertAxis ? 'Bottom' : 'Top') :\n                (this._invertAxis ? 'Right' : 'Left');\n            styles[`padding${side}`] = `${this._thumbGap}px`;\n        }\n        return styles;\n    }\n    /**\n     * @return {?}\n     */\n    get _thumbContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        /** @type {?} */\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     * @return {?}\n     */\n    _shouldInvertMouseCoords() {\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    }\n    /**\n     * The language direction for this slider element.\n     * @return {?}\n     */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onMousedown(event) {\n        if (this.disabled) {\n            return;\n        }\n        /** @type {?} */\n        const oldValue = this.value;\n        this._isSliding = false;\n        this._focusHostElement();\n        this._updateValueFromPosition({ x: event.clientX, y: event.clientY });\n        // Emit a change and input event if the value changed.\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onSlide(event) {\n        if (this.disabled) {\n            return;\n        }\n        // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n        // state, call the slide start handler manually.\n        if (!this._isSliding) {\n            this._onSlideStart(null);\n        }\n        // Prevent the slide from selecting anything else.\n        event.preventDefault();\n        /** @type {?} */\n        let oldValue = this.value;\n        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n        // Native range elements always emit `input` events when the value changed while sliding.\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onSlideStart(event) {\n        if (this.disabled || this._isSliding) {\n            return;\n        }\n        // Simulate mouseenter in case this is a mobile device.\n        this._onMouseenter();\n        this._isSliding = true;\n        this._focusHostElement();\n        this._valueOnSlideStart = this.value;\n        if (event) {\n            this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n            event.preventDefault();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onSlideEnd() {\n        this._isSliding = false;\n        if (this._valueOnSlideStart != this.value && !this.disabled) {\n            this._emitChangeEvent();\n        }\n        this._valueOnSlideStart = null;\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onBlur() {\n        this.onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        /** @type {?} */\n        let oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @param {?} numSteps\n     * @return {?}\n     */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @param {?} pos\n     * @return {?}\n     */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        /** @type {?} */\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        /** @type {?} */\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        /** @type {?} */\n        let posComponent = this.vertical ? pos.y : pos.x;\n        /** @type {?} */\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            /** @type {?} */\n            const exactValue = this._calculateValue(percent);\n            /** @type {?} */\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @return {?}\n     */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @return {?}\n     */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            /** @type {?} */\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            /** @type {?} */\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            /** @type {?} */\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            /** @type {?} */\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /**\n     * Creates a slider change object from the specified value.\n     * @param {?=} value\n     * @return {?}\n     */\n    _createChangeEvent(value = this.value) {\n        /** @type {?} */\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @param {?} value\n     * @return {?}\n     */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @param {?} percentage\n     * @return {?}\n     */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /**\n     * Return a number between two numbers.\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @return {?}\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @return {?}\n     */\n    _focusHostElement() {\n        this._elementRef.nativeElement.focus();\n    }\n    /**\n     * Blurs the native element.\n     * @return {?}\n     */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\"], hostVars: 26, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"mousedown\", function MatSlider_mousedown_HostBindingHandler($event) { return ctx._onMousedown($event); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"slide\", function MatSlider_slide_HostBindingHandler($event) { return ctx._onSlide($event); })(\"slideend\", function MatSlider_slideend_HostBindingHandler() { return ctx._onSlideEnd(); })(\"slidestart\", function MatSlider_slidestart_HostBindingHandler($event) { return ctx._onSlideStart($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3)(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8)(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10)(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd()()()();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, dependencies: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{ selector: 'mat-slider', exportAs: 'matSlider', providers: [MAT_SLIDER_VALUE_ACCESSOR], host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(mousedown)': '_onMousedown($event)',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    '(slide)': '_onSlide($event)',\n                    '(slideend)': '_onSlideEnd()',\n                    '(slidestart)': '_onSlideStart($event)',\n                    'class': 'mat-slider',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                }, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper><div class=\\\"mat-slider-track-wrapper\\\"><div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div><div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div></div><div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\"><div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div></div><div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\"><div class=\\\"mat-slider-focus-ring\\\"></div><div class=\\\"mat-slider-thumb\\\"></div><div class=\\\"mat-slider-thumb-label\\\"><span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span></div></div></div>\", inputs: ['disabled', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:0;vertical-align:middle}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),opacity .4s cubic-bezier(.25,.8,.25,1)}.cdk-keyboard-focused .mat-slider-focus-ring,.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label{cursor:-webkit-grab;cursor:grab}.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb,.mat-slider-sliding:not(.mat-slider-disabled) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb-label:active,.mat-slider:not(.mat-slider-disabled) .mat-slider-thumb:active{cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(.7);transition:transform .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1),border-color .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform .4s cubic-bezier(.25,.8,.25,1),border-radius .4s cubic-bezier(.25,.8,.25,1),background-color .4s cubic-bezier(.25,.8,.25,1)}@media screen and (-ms-high-contrast:active){.mat-slider-thumb-label{outline:solid 1px}}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-sliding .mat-slider-thumb-container,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-track-fill{transition-duration:0s}.mat-slider-has-ticks .mat-slider-wrapper::after{content:'';position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}@media screen and (-ms-high-contrast:active){.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}@media screen and (-ms-high-contrast:active){.mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-track-fill{transition:none}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); };\nMatSliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }], imports: [CommonModule, MatCommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider],\n                providers: [{ provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MatSliderModule, MAT_SLIDER_VALUE_ACCESSOR, MatSliderChange, MatSliderBase, _MatSliderMixinBase, MatSlider };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}