{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, defineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"\")(\"disabled\", ctx_r0.disabled);\n  }\n}\nconst _c2 = [\"*\"];\nclass AnimationCurves {}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that configures whether the Material sanity checks are enabled.\n  @type {?} */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n  /**\n   * @param {?} _sanityChecksEnabled\n   * @param {?=} _hammerLoader\n   */\n  constructor(_sanityChecksEnabled, _hammerLoader) {\n    this._sanityChecksEnabled = _sanityChecksEnabled;\n    this._hammerLoader = _hammerLoader;\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     */\n    this._hasDoneGlobalChecks = false;\n    /**\n     * Whether we've already checked for HammerJs availability.\n     */\n    this._hasCheckedHammer = false;\n    /**\n     * Reference to the global `document` object.\n     */\n    this._document = typeof document === 'object' && document ? document : null;\n    /**\n     * Reference to the global 'window' object.\n     */\n    this._window = typeof window === 'object' && window ? window : null;\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /**\n   * Whether any sanity checks are enabled\n   * @return {?}\n   */\n  _areChecksEnabled() {\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n  }\n  /**\n   * Whether the code is running in tests.\n   * @return {?}\n   */\n  _isTestEnv() {\n    /** @type {?} */\n    const window = /** @type {?} */this._window;\n    return window && (window.__karma__ || window.jasmine);\n  }\n  /**\n   * @return {?}\n   */\n  _checkDoctypeIsDefined() {\n    if (this._document && !this._document.doctype) {\n      console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _checkThemeIsPresent() {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n      return;\n    }\n    /** @type {?} */\n    const testElement = this._document.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    this._document.body.appendChild(testElement);\n    /** @type {?} */\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    this._document.body.removeChild(testElement);\n  }\n  /**\n   * Checks whether HammerJS is available.\n   * @return {?}\n   */\n  _checkHammerIsAvailable() {\n    if (this._hasCheckedHammer || !this._window) {\n      return;\n    }\n    if (this._areChecksEnabled() && ! /** @type {?} */this._window['Hammer'] && !this._hammerLoader) {\n      console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n    }\n    this._hasCheckedHammer = true;\n  }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) {\n  return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n};\nMatCommonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [BidiModule, BidiModule]\n});\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [{\n  type: Boolean,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MATERIAL_SANITY_CHECKS]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [HAMMER_LOADER]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, {\n    imports: function () {\n      return [BidiModule];\n    },\n    exports: function () {\n      return [BidiModule];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    /**\n     * @return {?}\n     */\n    get color() {\n      return this._color;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set color(value) {\n      /** @type {?} */\n      const colorPalette = value || defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n    }\n    /**\n     * @return {?}\n     */\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      /**\n       * Whether the component is in an error state.\n       */\n      this.errorState = false;\n      /**\n       * Stream that emits whenever the state of the input changes such that the wrapping\n       * `MatFormField` needs to run change detection.\n       */\n      this.stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    updateErrorState() {\n      /** @type {?} */\n      const oldState = this.errorState;\n      /** @type {?} */\n      const parent = this._parentFormGroup || this._parentForm;\n      /** @type {?} */\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      /** @type {?} */\n      const control = this.ngControl ? /** @type {?} */this.ngControl.control : null;\n      /** @type {?} */\n      const newState = matcher.isErrorState(control, parent);\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n  return class extends base {\n    /**\n     * @param {...?} args\n     */\n    constructor(...args) {\n      super(...args);\n      /**\n       * Whether this directive has been marked as initialized.\n       */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          /** @type {?} */this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * \\@docs-private\n     * @return {?}\n     */\n    _markInitialized() {\n      if (this._isInitialized) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n      this._isInitialized = true; /** @type {?} */\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n    /**\n     * Emits and completes the subscriber stream (should only emit once).\n     * @param {?} subscriber\n     * @return {?}\n     */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * InjectionToken for datepicker that can be used to override default locale code.\n  @type {?} */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** *\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n  @type {?} */\nconst MAT_DATE_LOCALE_PROVIDER = {\n  provide: MAT_DATE_LOCALE,\n  useExisting: LOCALE_ID\n};\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n  }\n  /**\n   * A stream that emits when the locale changes.\n   * @return {?}\n   */\n  get localeChanges() {\n    return this._localeChanges;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param {?} value The value to be deserialized into a date object.\n   * @return {?} The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param {?} locale The new locale.\n   * @return {?}\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param {?} first The first date to compare.\n   * @param {?} second The second date to compare.\n   * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param {?} first The first date to check.\n   * @param {?} second The second date to check.\n   * @return {?} Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      /** @type {?} */\n      let firstValid = this.isValid(first);\n      /** @type {?} */\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param {?} date The date to clamp.\n   * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n   * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n   * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Whether the browser supports the Intl API.\n  @type {?} */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/** *\n * The default month names to use if Intl API is not available.\n  @type {?} */\nconst DEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = i => String(i + 1);\n/** *\n * The default date names to use if Intl API is not available.\n  @type {?} */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** *\n * The default day of the week names to use if Intl API is not available.\n  @type {?} */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/** *\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n  @type {?} */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n  /** @type {?} */\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n  /**\n   * @param {?} matDateLocale\n   * @param {?} platform\n   */\n  constructor(matDateLocale, platform) {\n    super();\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from it's utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n    this.useUtcForDisplay = true;\n    super.setLocale(matDateLocale);\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getYear(date) {\n    return date.getFullYear();\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getMonth(date) {\n    return date.getMonth();\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getDate(date) {\n    return date.getDate();\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n  /**\n   * @param {?} style\n   * @return {?}\n   */\n  getMonthNames(style) {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n  /**\n   * @return {?}\n   */\n  getDateNames() {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n  /**\n   * @param {?} style\n   * @return {?}\n   */\n  getDayOfWeekNames(style) {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getYearName(date) {\n    if (SUPPORTS_INTL_API) {\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n  /**\n   * @return {?}\n   */\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  clone(date) {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n  /**\n   * @param {?} year\n   * @param {?} month\n   * @param {?} date\n   * @return {?}\n   */\n  createDate(year, month, date) {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n    /** @type {?} */\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n  /**\n   * @return {?}\n   */\n  today() {\n    return new Date();\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  parse(value) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n  /**\n   * @param {?} date\n   * @param {?} displayFormat\n   * @return {?}\n   */\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n      displayFormat = Object.assign({}, displayFormat, {\n        timeZone: 'utc'\n      });\n      /** @type {?} */\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n  /**\n   * @param {?} date\n   * @param {?} years\n   * @return {?}\n   */\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n  /**\n   * @param {?} date\n   * @param {?} months\n   * @return {?}\n   */\n  addCalendarMonths(date, months) {\n    /** @type {?} */\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n    return newDate;\n  }\n  /**\n   * @param {?} date\n   * @param {?} days\n   * @return {?}\n   */\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   * @param {?} value\n   * @return {?}\n   */\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        /** @type {?} */\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n  /**\n   * @param {?} obj\n   * @return {?}\n   */\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n  /**\n   * @return {?}\n   */\n  invalid() {\n    return new Date(NaN);\n  }\n  /**\n   * Creates a date but allows the month and date to overflow.\n   * @param {?} year\n   * @param {?} month\n   * @param {?} date\n   * @return {?}\n   */\n  _createDateWithOverflow(year, month, date) {\n    /** @type {?} */\n    const result = new Date(year, month, date);\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @param {?} n The number to pad.\n   * @return {?} The padded number.\n   */\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param {?} str The string to strip direction characters from.\n   * @return {?} The stripped string.\n   */\n  _stripDirectionalityCharacters(str) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param {?} date Date from which we want to get the string representation according to dtf\n   * @return {?} A Date object with its UTC representation based on the passed in date info\n   */\n  _format(dtf, date) {\n    /** @type {?} */\n    const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc1.Platform));\n};\nNativeDateAdapter.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_DATE_LOCALE]\n  }]\n}, {\n  type: Platform\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: ɵngcc1.Platform\n    }];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NativeDateModule {}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) {\n  return new (t || NativeDateModule)();\n};\nNativeDateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }],\n  imports: [PlatformModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, {\n    imports: function () {\n      return [PlatformModule];\n    }\n  });\n})();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) {\n  return new (t || MatNativeDateModule)();\n};\nMatNativeDateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: ɵ0$1\n  }],\n  imports: [NativeDateModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: ɵ0$1\n      }]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, {\n    imports: [NativeDateModule]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n  /**\n   * @param {?} control\n   * @param {?} form\n   * @return {?}\n   */\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\nShowOnDirtyErrorStateMatcher.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n  /**\n   * @param {?} control\n   * @param {?} form\n   * @return {?}\n   */\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\nErrorStateMatcher.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ErrorStateMatcher,\n  factory: ErrorStateMatcher.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\nErrorStateMatcher.ngInjectableDef = defineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n  @type {?} */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = ['longpress', 'slide', 'slidestart', 'slideend', 'slideright', 'slideleft'];\nconst ɵ0$2 = () => {},\n  ɵ1 = () => {};\n/** *\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n  @type {?} */\nconst noopHammerInstance = {\n  on: ɵ0$2,\n  off: ɵ1\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n  /**\n   * @param {?=} _hammerOptions\n   * @param {?=} commonModule\n   */\n  constructor(_hammerOptions, commonModule) {\n    super();\n    this._hammerOptions = _hammerOptions;\n    /**\n     * List of new event names to add to the gesture support list\n     */\n    this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n  }\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param {?} element Element to which to assign the new HammerJS gestures.\n   * @return {?} Newly-created HammerJS instance.\n   */\n  buildHammer(element) {\n    /** @type {?} */\n    const hammer = typeof window !== 'undefined' ? /** @type {?} */window.Hammer : null;\n    if (!hammer) {\n      // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n      // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n      // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n      // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n      // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n      // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n      // undefined).\n      // @breaking-change 8.0.0\n      return noopHammerInstance;\n    }\n    /** @type {?} */\n    const mc = new hammer(element, this._hammerOptions || undefined);\n    /** @type {?} */\n    const pan = new hammer.Pan();\n    /** @type {?} */\n    const swipe = new hammer.Swipe();\n    /** @type {?} */\n    const press = new hammer.Press();\n    /** @type {?} */\n    const slide = this._createRecognizer(pan, {\n      event: 'slide',\n      threshold: 0\n    }, swipe);\n    /** @type {?} */\n    const longpress = this._createRecognizer(press, {\n      event: 'longpress',\n      time: 500\n    });\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n    // Since the slide event threshold is set to zero, the slide recognizer can fire and\n    // accidentally reset the longpress recognizer. In order to make sure that the two\n    // recognizers can run simultaneously but don't affect each other, we allow the slide\n    // recognizer to recognize while a longpress is being processed.\n    // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n    longpress.recognizeWith(slide);\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n    return (/** @type {?} */mc\n    );\n  }\n  /**\n   * Creates a new recognizer, without affecting the default recognizers of HammerJS\n   * @param {?} base\n   * @param {?} options\n   * @param {...?} inheritances\n   * @return {?}\n   */\n  _createRecognizer(base, options, ...inheritances) {\n    /** @type {?} */\n    let recognizer = new /** @type {?} */base.constructor(options);\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n    return recognizer;\n  }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) {\n  return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8));\n};\nGestureConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: GestureConfig,\n  factory: GestureConfig.ɵfac\n});\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_HAMMER_OPTIONS]\n  }]\n}, {\n  type: MatCommonModule,\n  decorators: [{\n    type: Optional\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_HAMMER_OPTIONS]\n      }]\n    }, {\n      type: MatCommonModule,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {}\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\nMatLine.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, 'mat-2-line', false);\n    setClass(element, 'mat-3-line', false);\n    setClass(element, 'mat-multi-line', false);\n    if (length === 2 || length === 3) {\n      setClass(element, `mat-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `mat-multi-line`, true);\n    }\n  });\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n  /** @type {?} */\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n  /**\n   * @param {?} lines\n   * @param {?} element\n   */\n  constructor(lines, element) {\n    setLines(lines, element);\n  }\n}\nclass MatLineModule {}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) {\n  return new (t || MatLineModule)();\n};\nMatLineModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, {\n    declarations: [MatLine],\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nvar RippleState = {\n  FADING_IN: 0,\n  VISIBLE: 1,\n  FADING_OUT: 2,\n  HIDDEN: 3\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  /**\n   * @param {?} _renderer\n   * @param {?} element\n   * @param {?} config\n   */\n  constructor(_renderer, element, config) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /**\n     * Current state of the ripple.\n     */\n    this.state = RippleState.HIDDEN;\n  }\n  /**\n   * Fades out the ripple element.\n   * @return {?}\n   */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n  @type {?} */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n/** *\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n  @type {?} */\nconst ignoreMouseEventsTimeout = 800;\n/** *\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n  @type {?} */\nconst passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n  /**\n   * @param {?} _target\n   * @param {?} _ngZone\n   * @param {?} elementRef\n   * @param {?} platform\n   */\n  constructor(_target, _ngZone, elementRef, platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /**\n     * Whether the pointer is currently down or not.\n     */\n    this._isPointerDown = false;\n    /**\n     * Events to be registered on the trigger element.\n     */\n    this._triggerEvents = new Map();\n    /**\n     * Set of currently active ripple references.\n     */\n    this._activeRipples = new Set();\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     */\n    this.onMousedown = event => {\n      /** @type {?} */\n      const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n      /** @type {?} */\n      const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n      if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n        this._isPointerDown = true;\n        this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     */\n    this.onTouchStart = event => {\n      if (!this._target.rippleDisabled) {\n        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n        // events will launch a second ripple if we don't ignore mouse events for a specific\n        // time after a touchstart event.\n        this._lastTouchStartEvent = Date.now();\n        this._isPointerDown = true;\n        /** @type {?} */\n        const touches = event.changedTouches;\n        for (let i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being released.\n     */\n    this.onPointerUp = () => {\n      if (!this._isPointerDown) {\n        return;\n      }\n      this._isPointerDown = false;\n      // Fade-out all ripples that are visible and not persistent.\n      this._activeRipples.forEach(ripple => {\n        /** @type {?} */\n        const isVisible = ripple.state === RippleState.VISIBLE || ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n        if (!ripple.config.persistent && isVisible) {\n          ripple.fadeOut();\n        }\n      });\n    };\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents.set('mousedown', this.onMousedown).set('mouseup', this.onPointerUp).set('mouseleave', this.onPointerUp).set('touchstart', this.onTouchStart).set('touchend', this.onPointerUp).set('touchcancel', this.onPointerUp);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param {?=} config Extra ripple options.\n   * @return {?}\n   */\n  fadeInRipple(x, y, config = {}) {\n    /** @type {?} */\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    /** @type {?} */\n    const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    /** @type {?} */\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    /** @type {?} */\n    const offsetX = x - containerRect.left;\n    /** @type {?} */\n    const offsetY = y - containerRect.top;\n    /** @type {?} */\n    const duration = animationConfig.enterDuration;\n    /** @type {?} */\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n    ripple.style.transform = 'scale(1)';\n    /** @type {?} */\n    const rippleRef = new RippleRef(this, ripple, config);\n    rippleRef.state = RippleState.FADING_IN;\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      /** @type {?} */\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n      rippleRef.state = RippleState.VISIBLE;\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n    return rippleRef;\n  }\n  /**\n   * Fades out a ripple reference.\n   * @param {?} rippleRef\n   * @return {?}\n   */\n  fadeOutRipple(rippleRef) {\n    /** @type {?} */\n    const wasActive = this._activeRipples.delete(rippleRef);\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n    /** @type {?} */\n    const rippleEl = rippleRef.element;\n    /** @type {?} */\n    const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN; /** @type {?} */\n      rippleEl.parentNode.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n  /**\n   * Fades out all currently active ripples.\n   * @return {?}\n   */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n  /**\n   * Sets up the trigger event listeners\n   * @param {?} element\n   * @return {?}\n   */\n  setupTriggerEvents(element) {\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._ngZone.runOutsideAngular(() => {\n      this._triggerEvents.forEach((fn, type) => {\n        element.addEventListener(type, fn, passiveEventOptions);\n      });\n    });\n    this._triggerElement = element;\n  }\n  /**\n   * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n   * @param {?} fn\n   * @param {?=} delay\n   * @return {?}\n   */\n  runTimeoutOutsideZone(fn, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n  /**\n   * Removes previously registered event listeners from the trigger element.\n   * @return {?}\n   */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => {\n        /** @type {?} */this._triggerElement.removeEventListener(type, fn, passiveEventOptions);\n      });\n    }\n  }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  /** @type {?} */\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  /** @type {?} */\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that can be used to specify the global ripple options.\n  @type {?} */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n  /**\n   * @param {?} _elementRef\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?} globalOptions\n   * @param {?=} animationMode\n   */\n  constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n    this._elementRef = _elementRef;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    this.radius = 0;\n    this._disabled = false;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     */\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    if (animationMode === 'NoopAnimations') {\n      this._globalOptions.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   * @return {?}\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   * @return {?}\n   */\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n  /**\n   * @param {?} trigger\n   * @return {?}\n   */\n  set trigger(trigger) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n  /**\n   * Fades out all currently showing ripple elements.\n   * @return {?}\n   */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n  /**\n   * Ripple configuration from the directive's input values.\n   * \\@docs-private Implemented as part of RippleTarget\n   * @return {?}\n   */\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: Object.assign({}, this._globalOptions.animation, this.animation),\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n    };\n  }\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * \\@docs-private Implemented as part of RippleTarget\n   * @return {?}\n   */\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n  /**\n   * Sets up the the trigger event listeners if ripples are enabled.\n   * @return {?}\n   */\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n  /**\n   * Launches a manual ripple at the specified coordinated or just by the ripple config.\n   * @param {?} configOrX\n   * @param {?=} y\n   * @param {?=} config\n   * @return {?}\n   */\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n    }\n  }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatRipple.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    radius: [\"matRippleRadius\", \"radius\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"],\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    animation: [\"matRippleAnimation\", \"animation\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n/** @nocollapse */\nMatRipple.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: Platform\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatRipple.propDecorators = {\n  color: [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  unbounded: [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  centered: [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  radius: [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  animation: [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }],\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatRippleModule {}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) {\n  return new (t || MatRippleModule)();\n};\nMatRippleModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatCommonModule, PlatformModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PlatformModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, {\n    declarations: function () {\n      return [MatRipple];\n    },\n    imports: function () {\n      return [MatCommonModule, PlatformModule];\n    },\n    exports: function () {\n      return [MatRipple, MatCommonModule];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n  /**\n   * @param {?=} _animationMode\n   */\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /**\n     * Display state of the checkbox.\n     */\n    this.state = 'unchecked';\n    /**\n     * Whether the checkbox is disabled.\n     */\n    this.disabled = false;\n  }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatPseudoCheckbox.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate{opacity:.5}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [{\n  type: String,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [ANIMATION_MODULE_TYPE]\n  }]\n}];\nMatPseudoCheckbox.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate{opacity:.5}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n  return new (t || MatPseudoCheckboxModule)();\n};\nMatPseudoCheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, {\n    declarations: [MatPseudoCheckbox],\n    exports: [MatPseudoCheckbox]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n  constructor() {\n    super(...arguments);\n    /**\n     * Unique id for the underlying label.\n     */\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n  }\n}\nMatOptgroup.ɵfac = /*@__PURE__*/function () {\n  let ɵMatOptgroup_BaseFactory;\n  return function MatOptgroup_Factory(t) {\n    return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup);\n  };\n}();\nMatOptgroup.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"],\n  hostVars: 4,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n      ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    label: \"label\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(3, 1);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.label);\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatOptgroup.propDecorators = {\n  label: [{\n    type: Input\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-optgroup',\n        'role': 'group',\n        '[class.mat-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n      },\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"]\n    }]\n  }], null, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n  @type {?} */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n  /**\n   * @param {?} source\n   * @param {?=} isUserInput\n   */\n  constructor(source, isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/** *\n * Injection token used to provide the parent component to options.\n  @type {?} */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n  /**\n   * @param {?} _element\n   * @param {?} _changeDetectorRef\n   * @param {?} _parent\n   * @param {?} group\n   */\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /**\n     * The unique ID of the option.\n     */\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /**\n     * Event emitted when the option is selected or deselected.\n     */\n    this.onSelectionChange = new EventEmitter();\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     */\n    this._stateChanges = new Subject();\n  }\n  /**\n   * Whether the wrapping component is in multiple selection mode.\n   * @return {?}\n   */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /**\n   * Whether or not the option is currently selected.\n   * @return {?}\n   */\n  get selected() {\n    return this._selected;\n  }\n  /**\n   * Whether the option is disabled.\n   * @return {?}\n   */\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether ripples for the option are disabled.\n   * @return {?}\n   */\n  get disableRipple() {\n    return this._parent && this._parent.disableRipple;\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   * @return {?}\n   */\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   * @return {?}\n   */\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n  /**\n   * Selects the option.\n   * @return {?}\n   */\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /**\n   * Deselects the option.\n   * @return {?}\n   */\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /**\n   * Sets focus onto this option.\n   * @return {?}\n   */\n  focus() {\n    /** @type {?} */\n    const element = this._getHostElement();\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   * @return {?}\n   */\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   * @return {?}\n   */\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Gets the label to be used when determining whether the option should be focused.\n   * @return {?}\n   */\n  getLabel() {\n    return this.viewValue;\n  }\n  /**\n   * Ensures the option is selected when activated from the keyboard.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   * @return {?}\n   */\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /**\n   * Returns the correct tabindex for the option depending on disabled state.\n   * @return {?}\n   */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /**\n   * Gets the host DOM element.\n   * @return {?}\n   */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      /** @type {?} */\n      const viewValue = this.viewValue;\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /**\n   * Emits the selection change event.\n   * @param {?=} isUserInput\n   * @return {?}\n   */\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n}\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8));\n};\nMatOption.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    value: \"value\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  },\n  exportAs: [\"matOption\"],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 3,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  dependencies: [MatRipple, ɵngcc2.NgIf, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatOption.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MAT_OPTION_PARENT_COMPONENT]\n  }]\n}, {\n  type: MatOptgroup,\n  decorators: [{\n    type: Optional\n  }]\n}];\nMatOption.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  onSelectionChange: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': 'selected.toString()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option'\n      },\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    /** @type {?} */\n    let optionsArray = options.toArray();\n    /** @type {?} */\n    let groups = optionGroups.toArray();\n    /** @type {?} */\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n  /** @type {?} */\n  const optionOffset = optionIndex * optionHeight;\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatOptionModule {}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) {\n  return new (t || MatOptionModule)();\n};\nMatOptionModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, {\n    declarations: function () {\n      return [MatOption, MatOptgroup];\n    },\n    imports: function () {\n      return [MatRippleModule, CommonModule, MatPseudoCheckboxModule];\n    },\n    exports: function () {\n      return [MatOption, MatOptgroup];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * InjectionToken that can be used to specify the global label options.\n  @type {?} */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst JAN = 0;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst FEB = 1;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst MAR = 2;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst APR = 3;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst MAY = 4;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst JUN = 5;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst JUL = 6;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst AUG = 7;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst SEP = 8;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst OCT = 9;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst NOV = 10;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };","map":{"version":3,"names":["NgModule","InjectionToken","Optional","Inject","isDevMode","inject","LOCALE_ID","Injectable","Directive","ElementRef","Input","NgZone","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","EventEmitter","Output","defineInjectable","HAMMER_LOADER","HammerGestureConfig","BidiModule","coerceBooleanProperty","Subject","Observable","Platform","PlatformModule","normalizePassiveListenerOptions","startWith","isFakeMousedownFromScreenReader","ANIMATION_MODULE_TYPE","ENTER","SPACE","CommonModule","ɵngcc0","ɵngcc1","ɵngcc2","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","_c2","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","providedIn","factory","MATERIAL_SANITY_CHECKS_FACTORY","MatCommonModule","constructor","_sanityChecksEnabled","_hammerLoader","_hasDoneGlobalChecks","_hasCheckedHammer","_document","document","_window","window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","__karma__","jasmine","doctype","console","warn","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","removeChild","_checkHammerIsAvailable","ɵfac","MatCommonModule_Factory","t","ɵɵinject","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ctorParameters","Boolean","decorators","args","undefined","ngDevMode","ɵsetClassMetadata","exports","ngJitMode","ɵɵsetNgModuleScope","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","remove","mixinDisableRipple","_disableRipple","disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","tabIndex","mixinErrorState","errorState","stateChanges","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","provide","useExisting","DateAdapter","_localeChanges","localeChanges","deserialize","isDateInstance","isValid","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","DEFAULT_MONTH_NAMES","ɵ0","i","String","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","length","valueFunction","valuesArray","Array","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","createDate","result","today","parse","format","displayFormat","setFullYear","Math","Object","assign","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","obj","isNaN","getTime","NaN","n","slice","str","replace","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","NativeDateAdapter_Factory","ɵprov","ɵɵdefineInjectable","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","providers","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","ngInjectableDef","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","commonModule","events","buildHammer","element","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","options","inheritances","recognizer","item","GestureConfig_Factory","MatLine","MatLine_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","selector","host","setLines","lines","changes","pipe","subscribe","setClass","className","isAdd","MatLineSetter","MatLineModule","MatLineModule_Factory","declarations","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","config","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","RippleRenderer","_target","_ngZone","elementRef","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","onMousedown","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","onTouchStart","touches","changedTouches","onPointerUp","ripple","isVisible","terminateOnPointerUp","persistent","isBrowser","_containerElement","set","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","_mostRecentTransientRipple","runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","parentNode","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","runOutsideAngular","fn","addEventListener","delay","setTimeout","removeEventListener","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","ngOnInit","ngOnDestroy","launch","configOrX","MatRipple_Factory","ɵɵdirectiveInject","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","unbounded","inputs","exportAs","propDecorators","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","_animationMode","MatPseudoCheckbox_Factory","ɵcmp","ɵɵdefineComponent","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","arguments","_labelId","ɵMatOptgroup_BaseFactory","MatOptgroup_Factory","ɵɵgetInheritedFactory","MatOptgroup_HostBindings","ɵɵattribute","toString","label","features","ɵɵInheritDefinitionFeature","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵtext","ɵɵprojection","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_element","_changeDetectorRef","_parent","group","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","active","viewValue","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","_selectViaInteraction","preventDefault","_getTabIndex","ngAfterViewChecked","emit","MatOption_Factory","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","ɵɵhostProperty","outputs","MatOption_Template","ɵɵtemplate","dependencies","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","ɵa1"],"sources":["/Users/chriskeppler/Projects/Client/node_modules/@angular/material/__ivy_ngcc__/esm2015/core.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, defineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that configures whether the Material sanity checks are enabled.\n  @type {?} */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} _sanityChecksEnabled\n     * @param {?=} _hammerLoader\n     */\n    constructor(_sanityChecksEnabled, _hammerLoader) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        this._hammerLoader = _hammerLoader;\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Whether we've already checked for HammerJs availability.\n         */\n        this._hasCheckedHammer = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    _areChecksEnabled() {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = /** @type {?} */ (this._window);\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    _checkHammerIsAvailable() {\n        if (this._hasCheckedHammer || !this._window) {\n            return;\n        }\n        if (this._areChecksEnabled() && !(/** @type {?} */ (this._window))['Hammer'] && !this._hammerLoader) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8)); };\nMatCommonModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [BidiModule, BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? /** @type {?} */ (this.ngControl.control) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    /** @type {?} */ ((this._pendingSubscribers)).push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true; /** @type {?} */\n            ((this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * InjectionToken for datepicker that can be used to override default locale code.\n  @type {?} */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** *\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n  @type {?} */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Whether the browser supports the Intl API.\n  @type {?} */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/** *\n * The default month names to use if Intl API is not available.\n  @type {?} */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = i => String(i + 1);\n/** *\n * The default date names to use if Intl API is not available.\n  @type {?} */\nconst DEFAULT_DATE_NAMES = range(31, ɵ0);\n/** *\n * The default day of the week names to use if Intl API is not available.\n  @type {?} */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/** *\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n  @type {?} */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from it's utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign({}, displayFormat, { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nNativeDateAdapter.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc1.Platform }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); };\nNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [PlatformModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); };\nMatNativeDateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [NativeDateModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\nErrorStateMatcher.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ErrorStateMatcher, factory: ErrorStateMatcher.ɵfac, providedIn: 'root' });\n/** @nocollapse */ ErrorStateMatcher.ngInjectableDef = defineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n  @type {?} */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = () => { }, ɵ1 = () => { };\n/** *\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n  @type {?} */\nconst noopHammerInstance = {\n    on: ɵ0$2,\n    off: ɵ1,\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} commonModule\n     */\n    constructor(_hammerOptions, commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? (/** @type {?} */ (window)).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return /** @type {?} */ (mc);\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new (/** @type {?} */ (base.constructor))(options);\n        inheritances.push(base);\n        inheritances.forEach(item => recognizer.recognizeWith(item));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, 'mat-2-line', false);\n        setClass(element, 'mat-3-line', false);\n        setClass(element, 'mat-multi-line', false);\n        if (length === 2 || length === 3) {\n            setClass(element, `mat-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `mat-multi-line`, true);\n        }\n    });\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) { return new (t || MatLineModule)(); };\nMatLineModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\nvar RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = RippleState.HIDDEN;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n  @type {?} */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/** *\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n  @type {?} */\nconst ignoreMouseEventsTimeout = 800;\n/** *\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n  @type {?} */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this.onMousedown = (event) => {\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this.onTouchStart = (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        };\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this.onPointerUp = () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach(ripple => {\n                /** @type {?} */\n                const isVisible = ripple.state === RippleState.VISIBLE ||\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            });\n        };\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = elementRef.nativeElement;\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this.onMousedown)\n                .set('mouseup', this.onPointerUp)\n                .set('mouseleave', this.onPointerUp)\n                .set('touchstart', this.onTouchStart)\n                .set('touchend', this.onPointerUp)\n                .set('touchcancel', this.onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this.runTimeoutOutsideZone(() => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = RippleState.VISIBLE;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this.runTimeoutOutsideZone(() => {\n            rippleRef.state = RippleState.HIDDEN; /** @type {?} */\n            ((rippleEl.parentNode)).removeChild(rippleEl);\n        }, animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n    setupTriggerEvents(element) {\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular(() => {\n            this._triggerEvents.forEach((fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            });\n        });\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((fn, type) => {\n                /** @type {?} */ ((this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            });\n        }\n    }\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that can be used to specify the global ripple options.\n  @type {?} */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign({}, this._globalOptions.animation, this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the the trigger event listeners if ripples are enabled.\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); };\nMatRippleModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatCommonModule, PlatformModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate{opacity:.5}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate{opacity:.5}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"] }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); };\nMatPseudoCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = /*@__PURE__*/ function () { let ɵMatOptgroup_BaseFactory; return function MatOptgroup_Factory(t) { return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup); }; }();\nMatOptgroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.label);\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"] }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n  @type {?} */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\n/** *\n * Injection token used to provide the parent component to options.\n  @type {?} */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    focus() {\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx.selected.toString())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, dependencies: [MatRipple, ɵngcc2.NgIf, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': 'selected.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option'\n                }, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\", encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media screen and (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); };\nMatOptionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * InjectionToken that can be used to specify the global label options.\n  @type {?} */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst JAN = 0;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst FEB = 1;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst MAR = 2;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst APR = 3;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst MAY = 4;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst JUN = 5;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst JUL = 6;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst AUG = 7;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst SEP = 8;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst OCT = 9;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst NOV = 10;\n/** *\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n  @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}