{"ast":null,"code":"/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, InjectionToken, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, Optional, ContentChild, ContentChildren, EventEmitter, Input, NgZone, Output, ViewChild, Self, NgModule } from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, merge, Subscription, asapScheduler, of } from 'rxjs';\nimport { trigger, state, style, animate, transition, query, group } from '@angular/animations';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { startWith, switchMap, take, delay, filter, takeUntil } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r3.closed.emit(\"click\"));\n    })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r4._isAnimating = true);\n    })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r5._onAnimationDone($event));\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n  }\n}\nclass MatMenuContent {\n  /**\n   * @param {?} _template\n   * @param {?} _componentFactoryResolver\n   * @param {?} _appRef\n   * @param {?} _injector\n   * @param {?} _viewContainerRef\n   * @param {?} _document\n   */\n  constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document) {\n    this._template = _template;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._document = _document;\n    /**\n     * Emits when the menu content has been attached.\n     */\n    this._attached = new Subject();\n  }\n  /**\n   * Attaches the content with a particular context.\n   * \\@docs-private\n   * @param {?=} context\n   * @return {?}\n   */\n  attach(context = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n    this.detach();\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n    }\n    /** @type {?} */\n    const element = this._template.elementRef.nativeElement; /** @type {?} */\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode.insertBefore(this._outlet.outletElement, element);\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n  /**\n   * Detaches the content.\n   * \\@docs-private\n   * @return {?}\n   */\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) {\n  return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\nMatMenuContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuContent,\n  selectors: [[\"ng-template\", \"matMenuContent\", \"\"]]\n});\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: ApplicationRef\n}, {\n  type: Injector\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matMenuContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n  @type {?} */\nconst matMenuAnimations = {\n  /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n  transformMenu: trigger('transformMenu', [state('void', style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), transition('void => enter', group([query('.mat-menu-content', animate('100ms linear', style({\n    opacity: 1\n  }))), animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    transform: 'scale(1)'\n  }))])), transition('* => void', animate('100ms 25ms linear', style({\n    opacity: 0\n  })))]),\n  /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n  fadeInItems: trigger('fadeInItems', [\n  // TODO(crisbeto): this is inside the `transformMenu`\n  // now. Remove next time we do breaking changes.\n  state('showing', style({\n    opacity: 1\n  })), transition('void => *', [style({\n    opacity: 0\n  }), animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/** *\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n  @type {?} */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/** *\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n  @type {?} */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n  throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n  @type {?} */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n  /**\n   * @param {?} _elementRef\n   * @param {?=} document\n   * @param {?=} _focusMonitor\n   * @param {?=} _parentMenu\n   */\n  constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n    super();\n    this._elementRef = _elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._parentMenu = _parentMenu;\n    /**\n     * Stream that emits when the menu item is hovered.\n     */\n    this._hovered = new Subject();\n    /**\n     * Whether the menu item is highlighted.\n     */\n    this._highlighted = false;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     */\n    this._triggersSubmenu = false;\n    if (_focusMonitor) {\n      // Start monitoring the element so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      _focusMonitor.monitor(this._elementRef, false);\n    }\n    if (_parentMenu && _parentMenu.addItem) {\n      _parentMenu.addItem(this);\n    }\n    this._document = document;\n  }\n  /**\n   * Focuses the menu item.\n   * @param {?=} origin\n   * @return {?}\n   */\n  focus(origin = 'program') {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\n    } else {\n      this._getHostElement().focus();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n    this._hovered.complete();\n  }\n  /**\n   * Used to set the `tabindex`.\n   * @return {?}\n   */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /**\n   * Returns the host DOM element.\n   * @return {?}\n   */\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n  /**\n   * Prevents the default element actions if it is disabled.\n   * @param {?} event\n   * @return {?}\n   */\n  _checkDisabled(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  /**\n   * Emits to the hover stream.\n   * @return {?}\n   */\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n  /**\n   * Gets the label to be used when determining whether the option should be focused.\n   * @return {?}\n   */\n  getLabel() {\n    /** @type {?} */\n    const element = this._elementRef.nativeElement;\n    /** @type {?} */\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n    /** @type {?} */\n    let output = '';\n    if (element.childNodes) {\n      /** @type {?} */\n      const length = element.childNodes.length;\n      // Go through all the top-level text nodes and extract their text.\n      // We skip anything that's not a text node to prevent the text from\n      // being thrown off by something like an icon.\n      for (let i = 0; i < length; i++) {\n        if (element.childNodes[i].nodeType === textNodeType) {\n          output += element.childNodes[i].textContent;\n        }\n      }\n    }\n    return output.trim();\n  }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) {\n  return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8));\n};\nMatMenuItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMenuItem,\n  selectors: [[\"\", \"mat-menu-item\", \"\"]],\n  hostAttrs: [\"role\", \"menuitem\", 1, \"mat-menu-item\"],\n  hostVars: 7,\n  hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n        return ctx._checkDisabled($event);\n      })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n        return ctx._handleMouseEnter();\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n      ɵngcc0.ɵɵclassProp(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matMenuItem\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 2,\n  consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]],\n  template: function MatMenuItem_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelement(1, \"div\", 0);\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    }\n  },\n  dependencies: [ɵngcc2.MatRipple],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: FocusMonitor\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_PANEL]\n  }, {\n    type: Optional\n  }]\n}];\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n    type: Component,\n    args: [{\n      selector: '[mat-menu-item]',\n      exportAs: 'matMenuItem',\n      inputs: ['disabled', 'disableRipple'],\n      host: {\n        'role': 'menuitem',\n        'class': 'mat-menu-item',\n        '[class.mat-menu-item-highlighted]': '_highlighted',\n        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)',\n        '(mouseenter)': '_handleMouseEnter()'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token to be used to override the default options for `mat-menu`.\n  @type {?} */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\n/** *\n * Start elevation for the menu panel.\n * \\@docs-private\n  @type {?} */\nconst MAT_MENU_BASE_ELEVATION = 4;\nclass MatMenu {\n  /**\n   * @param {?} _elementRef\n   * @param {?} _ngZone\n   * @param {?} _defaultOptions\n   */\n  constructor(_elementRef, _ngZone, _defaultOptions) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._defaultOptions = _defaultOptions;\n    this._xPosition = this._defaultOptions.xPosition;\n    this._yPosition = this._defaultOptions.yPosition;\n    /**\n     * Menu items inside the current menu.\n     */\n    this._items = [];\n    /**\n     * Emits whenever the amount of menu items changes.\n     */\n    this._itemChanges = new Subject();\n    /**\n     * Subscription to tab events on the menu panel\n     */\n    this._tabSubscription = Subscription.EMPTY;\n    /**\n     * Config object to be passed into the menu's ngClass\n     */\n    this._classList = {};\n    /**\n     * Current state of the panel animation.\n     */\n    this._panelAnimationState = 'void';\n    /**\n     * Emits whenever an animation on the menu completes.\n     */\n    this._animationDone = new Subject();\n    /**\n     * Class to be added to the backdrop element.\n     */\n    this.backdropClass = this._defaultOptions.backdropClass;\n    this._overlapTrigger = this._defaultOptions.overlapTrigger;\n    this._hasBackdrop = this._defaultOptions.hasBackdrop;\n    /**\n     * Event emitted when the menu is closed.\n     */\n    this.closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * \\@breaking-change 8.0.0\n     */\n    this.close = this.closed;\n  }\n  /**\n   * Position of the menu in the X axis.\n   * @return {?}\n   */\n  get xPosition() {\n    return this._xPosition;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set xPosition(value) {\n    if (value !== 'before' && value !== 'after') {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n  /**\n   * Position of the menu in the Y axis.\n   * @return {?}\n   */\n  get yPosition() {\n    return this._yPosition;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set yPosition(value) {\n    if (value !== 'above' && value !== 'below') {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n  /**\n   * Whether the menu should overlap its trigger.\n   * @return {?}\n   */\n  get overlapTrigger() {\n    return this._overlapTrigger;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set overlapTrigger(value) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  /**\n   * Whether the menu has a backdrop.\n   * @return {?}\n   */\n  get hasBackdrop() {\n    return this._hasBackdrop;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set hasBackdrop(value) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param {?} classes list of class names\n   * @return {?}\n   */\n  set panelClass(classes) {\n    if (classes && classes.length) {\n      this._classList = classes.split(' ').reduce((obj, className) => {\n        obj[className] = true;\n        return obj;\n      }, {});\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * \\@breaking-change 8.0.0\n   * @return {?}\n   */\n  get classList() {\n    return this.panelClass;\n  }\n  /**\n   * @param {?} classes\n   * @return {?}\n   */\n  set classList(classes) {\n    this.panelClass = classes;\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this._items).withWrap().withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n  /**\n   * Stream that emits whenever the hovered menu item changes.\n   * @return {?}\n   */\n  _hovered() {\n    return this._itemChanges.pipe(startWith(this._items), switchMap(items => merge(...items.map(item => item._hovered))));\n  }\n  /**\n   * Handle a keyboard event from the menu, delegating to the appropriate action.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleKeydown(event) {\n    /** @type {?} */\n    const keyCode = event.keyCode;\n    switch (keyCode) {\n      case ESCAPE:\n        this.closed.emit('keydown');\n        break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n        break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n        break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          this._keyManager.setFocusOrigin('keyboard');\n        }\n        this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Focus the first item in the menu.\n   * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n   * @return {?}\n   */\n  focusFirstItem(origin = 'program') {\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n    if (this.lazyContent) {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n    } else {\n      this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n    }\n  }\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   * @return {?}\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n  /**\n   * Sets the menu panel elevation.\n   * @param {?} depth Number of parent menus that come before the menu.\n   * @return {?}\n   */\n  setElevation(depth) {\n    /** @type {?} */\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n    /** @type {?} */\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n  /**\n   * Registers a menu item with the menu.\n   * \\@docs-private\n   * @param {?} item\n   * @return {?}\n   */\n  addItem(item) {\n    // We register the items through this method, rather than picking them up through\n    // `ContentChildren`, because we need the items to be picked up by their closest\n    // `mat-menu` ancestor. If we used `@ContentChildren(MatMenuItem, {descendants: true})`,\n    // all descendant items will bleed into the top-level menu in the case where the consumer\n    // has `mat-menu` instances nested inside each other.\n    if (this._items.indexOf(item) === -1) {\n      this._items.push(item);\n      this._itemChanges.next(this._items);\n    }\n  }\n  /**\n   * Removes an item from the menu.\n   * \\@docs-private\n   * @param {?} item\n   * @return {?}\n   */\n  removeItem(item) {\n    /** @type {?} */\n    const index = this._items.indexOf(item);\n    if (this._items.indexOf(item) > -1) {\n      this._items.splice(index, 1);\n      this._itemChanges.next(this._items);\n    }\n  }\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * \\@docs-private\n   * @param {?=} posX Position of the menu along the x axis.\n   * @param {?=} posY Position of the menu along the y axis.\n   * @return {?}\n   */\n  setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n    /** @type {?} */\n    const classes = this._classList;\n    classes['mat-menu-before'] = posX === 'before';\n    classes['mat-menu-after'] = posX === 'after';\n    classes['mat-menu-above'] = posY === 'above';\n    classes['mat-menu-below'] = posY === 'below';\n  }\n  /**\n   * Starts the enter animation.\n   * @return {?}\n   */\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n  /**\n   * Resets the panel animation to its initial state.\n   * @return {?}\n   */\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n  /**\n   * Callback that is invoked when the panel animation completes.\n   * @param {?} event\n   * @return {?}\n   */\n  _onAnimationDone(event) {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n    // Scroll the content element to the top once the animation is done. This is necessary, because\n    // we move focus to the first item while it's still being animated, which can throw the browser\n    // off when it determines the scroll position. Alternatively we can move focus when the\n    // animation is done, however moving focus asynchronously will interrupt screen readers\n    // which are in the process of reading out the menu already. We take the `element` from\n    // the `event` since we can't use a `ViewChild` to access the pane.\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) {\n  return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS));\n};\nMatMenu.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMenu,\n  selectors: [[\"mat-menu\"]],\n  contentQueries: function MatMenu_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  viewQuery: function MatMenu_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    }\n  },\n  inputs: {\n    backdropClass: \"backdropClass\",\n    xPosition: \"xPosition\",\n    yPosition: \"yPosition\",\n    overlapTrigger: \"overlapTrigger\",\n    hasBackdrop: \"hasBackdrop\",\n    panelClass: [\"class\", \"panelClass\"],\n    classList: \"classList\"\n  },\n  outputs: {\n    closed: \"closed\",\n    close: \"close\"\n  },\n  exportAs: [\"matMenu\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_MENU_PANEL,\n    useExisting: MatMenu\n  }])],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]],\n  template: function MatMenu_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 2, \"ng-template\");\n    }\n  },\n  dependencies: [ɵngcc3.NgClass],\n  styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media screen and (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}.mat-menu-panel.ng-animating .mat-menu-item-submenu-trigger{pointer-events:none}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"],\n  encapsulation: 2,\n  data: {\n    animation: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems]\n  },\n  changeDetection: 0\n});\n/** @nocollapse */\nMatMenu.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_DEFAULT_OPTIONS]\n  }]\n}];\nMatMenu.propDecorators = {\n  backdropClass: [{\n    type: Input\n  }],\n  xPosition: [{\n    type: Input\n  }],\n  yPosition: [{\n    type: Input\n  }],\n  templateRef: [{\n    type: ViewChild,\n    args: [TemplateRef]\n  }],\n  items: [{\n    type: ContentChildren,\n    args: [MatMenuItem]\n  }],\n  lazyContent: [{\n    type: ContentChild,\n    args: [MatMenuContent]\n  }],\n  overlapTrigger: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  panelClass: [{\n    type: Input,\n    args: ['class']\n  }],\n  classList: [{\n    type: Input\n  }],\n  closed: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n    type: Component,\n    args: [{\n      selector: 'mat-menu',\n      template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.start)=\\\"_isAnimating = true\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\"><ng-content></ng-content></div></div></ng-template>\",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matMenu',\n      animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems],\n      providers: [{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }],\n      styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media screen and (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}.mat-menu-panel.ng-animating .mat-menu-item-submenu-trigger{pointer-events:none}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, {\n    backdropClass: [{\n      type: Input\n    }],\n    closed: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    overlapTrigger: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input,\n      args: ['class']\n    }],\n    classList: [{\n      type: Input\n    }],\n    templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [MatMenuItem]\n    }],\n    lazyContent: [{\n      type: ContentChild,\n      args: [MatMenuContent]\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that determines the scroll handling while the menu is open.\n  @type {?} */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** *\n * \\@docs-private\n  @type {?} */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/** *\n * Default top padding of the menu panel.\n  @type {?} */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nclass MatMenuTrigger {\n  /**\n   * @param {?} _overlay\n   * @param {?} _element\n   * @param {?} _viewContainerRef\n   * @param {?} scrollStrategy\n   * @param {?} _parentMenu\n   * @param {?} _menuItemInstance\n   * @param {?} _dir\n   * @param {?=} _focusMonitor\n   */\n  constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n    this._overlay = _overlay;\n    this._element = _element;\n    this._viewContainerRef = _viewContainerRef;\n    this._parentMenu = _parentMenu;\n    this._menuItemInstance = _menuItemInstance;\n    this._dir = _dir;\n    this._focusMonitor = _focusMonitor;\n    this._overlayRef = null;\n    this._menuOpen = false;\n    this._closeSubscription = Subscription.EMPTY;\n    this._hoverSubscription = Subscription.EMPTY;\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n    this._openedBy = null;\n    /**\n     * Event emitted when the associated menu is opened.\n     */\n    this.menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * \\@breaking-change 8.0.0\n     */\n    this.onMenuOpen = this.menuOpened;\n    /**\n     * Event emitted when the associated menu is closed.\n     */\n    this.menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * \\@breaking-change 8.0.0\n     */\n    this.onMenuClose = this.menuClosed;\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n    this._scrollStrategy = scrollStrategy;\n  }\n  /**\n   * @deprecated\n   * \\@breaking-change 8.0.0\n   * @return {?}\n   */\n  get _deprecatedMatMenuTriggerFor() {\n    return this.menu;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n  set _deprecatedMatMenuTriggerFor(v) {\n    this.menu = v;\n  }\n  /**\n   * @return {?}\n   */\n  ngAfterContentInit() {\n    this._checkMenu();\n    this.menu.close.asObservable().subscribe(reason => {\n      this._destroyMenu();\n      // If a click closed the menu, we should close the entire chain of nested menus.\n      if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n        this._parentMenu.closed.emit(reason);\n      }\n    });\n    this._handleHover();\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n    this._cleanUpSubscriptions();\n  }\n  /**\n   * Whether the menu is open.\n   * @return {?}\n   */\n  get menuOpen() {\n    return this._menuOpen;\n  }\n  /**\n   * The text direction of the containing app.\n   * @return {?}\n   */\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /**\n   * Whether the menu triggers a sub-menu or a top-level one.\n   * @return {?}\n   */\n  triggersSubmenu() {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n  /**\n   * Toggles the menu between the open and closed states.\n   * @return {?}\n   */\n  toggleMenu() {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n  /**\n   * Opens the menu.\n   * @return {?}\n   */\n  openMenu() {\n    if (this._menuOpen) {\n      return;\n    }\n    this._checkMenu();\n    /** @type {?} */\n    const overlayRef = this._createOverlay();\n    this._setPosition( /** @type {?} */overlayRef.getConfig().positionStrategy);\n    overlayRef.attach(this._portal);\n    if (this.menu.lazyContent) {\n      this.menu.lazyContent.attach(this.menuData);\n    }\n    this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n    this._initMenu();\n    if (this.menu instanceof MatMenu) {\n      this.menu._startAnimation();\n    }\n  }\n  /**\n   * Closes the menu.\n   * @return {?}\n   */\n  closeMenu() {\n    this.menu.close.emit();\n  }\n  /**\n   * Focuses the menu trigger.\n   * @param {?=} origin Source of the menu trigger's focus.\n   * @return {?}\n   */\n  focus(origin = 'program') {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._element, origin);\n    } else {\n      this._element.nativeElement.focus();\n    }\n  }\n  /**\n   * Closes the menu and does the necessary cleanup.\n   * @return {?}\n   */\n  _destroyMenu() {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n    /** @type {?} */\n    const menu = this.menu;\n    this._closeSubscription.unsubscribe();\n    this._overlayRef.detach();\n    if (menu instanceof MatMenu) {\n      menu._resetAnimation();\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone.pipe(filter(event => event.toState === 'void'), take(1),\n        // Interrupt if the content got re-attached.\n        takeUntil(menu.lazyContent._attached)).subscribe(() => /** @type {?} */menu.lazyContent.detach(), undefined, () => {\n          // No matter whether the content got re-attached, reset the menu.\n          this._resetMenu();\n        });\n      } else {\n        this._resetMenu();\n      }\n    } else {\n      this._resetMenu();\n      if (menu.lazyContent) {\n        menu.lazyContent.detach();\n      }\n    }\n  }\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   * @return {?}\n   */\n  _initMenu() {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n    this.menu.focusFirstItem(this._openedBy || 'program');\n  }\n  /**\n   * Updates the menu elevation based on the amount of parent menus that it has.\n   * @return {?}\n   */\n  _setMenuElevation() {\n    if (this.menu.setElevation) {\n      /** @type {?} */\n      let depth = 0;\n      /** @type {?} */\n      let parentMenu = this.menu.parentMenu;\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n      this.menu.setElevation(depth);\n    }\n  }\n  /**\n   * This method resets the menu when it's closed, most importantly restoring\n   * focus to the menu trigger if the menu was opened via the keyboard.\n   * @return {?}\n   */\n  _resetMenu() {\n    this._setIsMenuOpen(false);\n    // We should reset focus if the user is navigating using a keyboard or\n    // if we have a top-level trigger which might cause focus to be lost\n    // when clicking on the backdrop.\n    if (!this._openedBy) {\n      // Note that the focus style will show up both for `program` and\n      // `keyboard` so we don't have to specify which one it is.\n      this.focus();\n    } else if (!this.triggersSubmenu()) {\n      this.focus(this._openedBy);\n    }\n    this._openedBy = null;\n  }\n  /**\n   * @param {?} isOpen\n   * @return {?}\n   */\n  _setIsMenuOpen(isOpen) {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n  /**\n   * This method checks that a valid instance of MatMenu has been passed into\n   * matMenuTriggerFor. If not, an exception is thrown.\n   * @return {?}\n   */\n  _checkMenu() {\n    if (!this.menu) {\n      throwMatMenuMissingError();\n    }\n  }\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   * @return {?}\n   */\n  _createOverlay() {\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      /** @type {?} */\n      const config = this._getOverlayConfig();\n      this._subscribeToPositions( /** @type {?} */config.positionStrategy);\n      this._overlayRef = this._overlay.create(config);\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\n      this._overlayRef.keydownEvents().subscribe();\n    }\n    return this._overlayRef;\n  }\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @return {?} OverlayConfig\n   */\n  _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withTransformOriginOn('.mat-menu-panel'),\n      hasBackdrop: this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop,\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir\n    });\n  }\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   * @param {?} position\n   * @return {?}\n   */\n  _subscribeToPositions(position) {\n    if (this.menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        /** @type {?} */\n        const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        /** @type {?} */\n        const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above'; /** @type {?} */\n        this.menu.setPositionClasses(posX, posY);\n      });\n    }\n  }\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param {?} positionStrategy Strategy whose position to update.\n   * @return {?}\n   */\n  _setPosition(positionStrategy) {\n    let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n    let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    /** @type {?} */\n    let offsetY = 0;\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n    positionStrategy.withPositions([{\n      originX,\n      originY,\n      overlayX,\n      overlayY,\n      offsetY\n    }, {\n      originX: originFallbackX,\n      originY,\n      overlayX: overlayFallbackX,\n      overlayY,\n      offsetY\n    }, {\n      originX,\n      originY: originFallbackY,\n      overlayX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }, {\n      originX: originFallbackX,\n      originY: originFallbackY,\n      overlayX: overlayFallbackX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }]);\n  }\n  /**\n   * Cleans up the active subscriptions.\n   * @return {?}\n   */\n  _cleanUpSubscriptions() {\n    this._closeSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n  /**\n   * Returns a stream that emits whenever an action that should close the menu occurs.\n   * @return {?}\n   */\n  _menuClosingActions() {\n    /** @type {?} */\n    const backdrop = /** @type {?} */this._overlayRef.backdropClick();\n    /** @type {?} */\n    const detachments = /** @type {?} */this._overlayRef.detachments();\n    /** @type {?} */\n    const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n    /** @type {?} */\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n  /**\n   * Handles mouse presses on the trigger.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleMousedown(event) {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : null;\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n  /**\n   * Handles key presses on the trigger.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleKeydown(event) {\n    /** @type {?} */\n    const keyCode = event.keyCode;\n    if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n      this.openMenu();\n    }\n  }\n  /**\n   * Handles click events on the trigger.\n   * @param {?} event\n   * @return {?}\n   */\n  _handleClick(event) {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n  /**\n   * Handles the cases where the user hovers over the trigger.\n   * @return {?}\n   */\n  _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu()) {\n      return;\n    }\n    this._hoverSubscription = this._parentMenu._hovered()\n    // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n    // with different data and triggers), we have to delay it by a tick to ensure that\n    // it won't be closed immediately after it is opened.\n    .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler)).subscribe(() => {\n      this._openedBy = 'mouse';\n      // If the same menu is used between multiple triggers, it might still be animating\n      // while the new trigger tries to re-open it. Wait for the animation to finish\n      // before doing so. Also interrupt if the user moves to another item.\n      if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n        // We need the `delay(0)` here in order to avoid\n        // 'changed after checked' errors in some cases. See #12194.\n        this.menu._animationDone.pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered())).subscribe(() => this.openMenu());\n      } else {\n        this.openMenu();\n      }\n    });\n  }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) {\n  return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor));\n};\nMatMenuTrigger.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuTrigger,\n  selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n  hostAttrs: [\"aria-haspopup\", \"true\"],\n  hostVars: 1,\n  hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) {\n        return ctx._handleMousedown($event);\n      })(\"touchstart\", function MatMenuTrigger_touchstart_HostBindingHandler() {\n        return ctx._openedBy = \"touch\";\n      })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) {\n        return ctx._handleClick($event);\n      });\n    }\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null);\n    }\n  },\n  inputs: {\n    _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n    menu: [\"matMenuTriggerFor\", \"menu\"],\n    menuData: [\"matMenuTriggerData\", \"menuData\"]\n  },\n  outputs: {\n    menuOpened: \"menuOpened\",\n    onMenuOpen: \"onMenuOpen\",\n    menuClosed: \"menuClosed\",\n    onMenuClose: \"onMenuClose\"\n  },\n  exportAs: [\"matMenuTrigger\"]\n});\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [{\n  type: Overlay\n}, {\n  type: ElementRef\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_SCROLL_STRATEGY]\n  }]\n}, {\n  type: MatMenu,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: MatMenuItem,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Self\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: FocusMonitor\n}];\nMatMenuTrigger.propDecorators = {\n  _deprecatedMatMenuTriggerFor: [{\n    type: Input,\n    args: ['mat-menu-trigger-for']\n  }],\n  menu: [{\n    type: Input,\n    args: ['matMenuTriggerFor']\n  }],\n  menuData: [{\n    type: Input,\n    args: ['matMenuTriggerData']\n  }],\n  menuOpened: [{\n    type: Output\n  }],\n  onMenuOpen: [{\n    type: Output\n  }],\n  menuClosed: [{\n    type: Output\n  }],\n  onMenuClose: [{\n    type: Output\n  }]\n};\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n      host: {\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'menuOpen || null',\n        '(mousedown)': '_handleMousedown($event)',\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick($event)'\n      },\n      exportAs: 'matMenuTrigger'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Overlay\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: MatMenu,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: MatMenuItem,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: ɵngcc5.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }];\n  }, {\n    menuOpened: [{\n      type: Output\n    }],\n    onMenuOpen: [{\n      type: Output\n    }],\n    menuClosed: [{\n      type: Output\n    }],\n    onMenuClose: [{\n      type: Output\n    }],\n    _deprecatedMatMenuTriggerFor: [{\n      type: Input,\n      args: ['mat-menu-trigger-for']\n    }],\n    menu: [{\n      type: Input,\n      args: ['matMenuTriggerFor']\n    }],\n    menuData: [{\n      type: Input,\n      args: ['matMenuTriggerData']\n    }]\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatMenuModule {}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) {\n  return new (t || MatMenuModule)();\n};\nMatMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatMenuModule\n});\nMatMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n      exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\n      declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, {\n    declarations: function () {\n      return [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, MatRippleModule, OverlayModule];\n    },\n    exports: function () {\n      return [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MAT_MENU_SCROLL_STRATEGY, MatMenuModule, MatMenu, MAT_MENU_DEFAULT_OPTIONS, MatMenuItem, MatMenuTrigger, matMenuAnimations, fadeInItems, transformMenu, MatMenuContent, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵa21, MatMenuItemBase as ɵb21, _MatMenuItemMixinBase as ɵc21, MAT_MENU_PANEL as ɵf21, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵd21, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵe21 };","map":{"version":3,"names":["Directive","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","Inject","InjectionToken","ChangeDetectionStrategy","Component","ElementRef","ViewEncapsulation","Optional","ContentChild","ContentChildren","EventEmitter","Input","NgZone","Output","ViewChild","Self","NgModule","TemplatePortal","DomPortalOutlet","DOCUMENT","CommonModule","Subject","merge","Subscription","asapScheduler","of","trigger","state","style","animate","transition","query","group","FocusMonitor","FocusKeyManager","isFakeMousedownFromScreenReader","mixinDisabled","mixinDisableRipple","MatCommonModule","MatRippleModule","coerceBooleanProperty","ESCAPE","LEFT_ARROW","RIGHT_ARROW","DOWN_ARROW","UP_ARROW","startWith","switchMap","take","delay","filter","takeUntil","Directionality","Overlay","OverlayConfig","OverlayModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","_c1","MatMenu_ng_template_0_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatMenu_ng_template_0_Template_div_keydown_0_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_handleKeydown","MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","emit","MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_isAnimating","MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","_onAnimationDone","ɵɵprojection","ɵɵelementEnd","ctx_r0","ɵɵproperty","_classList","_panelAnimationState","MatMenuContent","constructor","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","attach","context","_portal","detach","_outlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","next","isAttached","ngOnDestroy","dispose","ɵfac","MatMenuContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","ctorParameters","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","selector","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_PANEL","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","_elementRef","document","_focusMonitor","_parentMenu","_hovered","_highlighted","_triggersSubmenu","monitor","addItem","focus","origin","focusVia","_getHostElement","stopMonitoring","removeItem","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","textNodeType","TEXT_NODE","output","childNodes","length","i","nodeType","textContent","trim","MatMenuItem_Factory","ɵcmp","ɵɵdefineComponent","hostAttrs","hostVars","hostBindings","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","MatMenuItem_mouseenter_HostBindingHandler","ɵɵattribute","toString","ɵɵclassProp","inputs","disableRipple","exportAs","features","ɵɵInheritDefinitionFeature","attrs","ngContentSelectors","decls","vars","consts","template","MatMenuItem_Template","ɵɵprojectionDef","ɵɵelement","ɵɵadvance","dependencies","MatRipple","encapsulation","changeDetection","host","OnPush","None","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","MAT_MENU_BASE_ELEVATION","MatMenu","_ngZone","_defaultOptions","_xPosition","_yPosition","_items","_itemChanges","_tabSubscription","EMPTY","_animationDone","_overlapTrigger","_hasBackdrop","hasBackdrop","close","value","setPositionClasses","panelClass","classes","split","reduce","obj","className","classList","ngOnInit","ngAfterContentInit","_keyManager","withWrap","withTypeAhead","tabOut","subscribe","unsubscribe","pipe","items","map","item","keyCode","parentMenu","direction","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","asObservable","setFirstItemActive","resetActiveItem","setActiveItem","setElevation","depth","newElevation","customElevation","Object","keys","find","c","startsWith","_previousElevation","indexOf","push","index","splice","posX","posY","_startAnimation","_resetAnimation","toState","activeItemIndex","scrollTop","MatMenu_Factory","contentQueries","MatMenu_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatMenu_Query","ɵɵviewQuery","templateRef","outputs","ɵɵProvidersFeature","provide","useExisting","MatMenu_Template","ɵɵtemplate","NgClass","styles","data","animation","propDecorators","animations","providers","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MENU_PANEL_TOP_PADDING","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closeSubscription","_hoverSubscription","_openedBy","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","_scrollStrategy","_deprecatedMatMenuTriggerFor","menu","v","_checkMenu","reason","_destroyMenu","_handleHover","_cleanUpSubscriptions","menuOpen","dir","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","_setPosition","getConfig","positionStrategy","menuData","_menuClosingActions","_initMenu","_resetMenu","_setMenuElevation","_setIsMenuOpen","isOpen","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","MatMenuTrigger_touchstart_HostBindingHandler","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","MatMenuModule","MatMenuModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","ɵa21","ɵb21","ɵc21","ɵf21","ɵd21","ɵe21"],"sources":["/Users/chriskeppler/Projects/Client/node_modules/@angular/material/__ivy_ngcc__/esm2015/menu.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, InjectionToken, ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation, Optional, ContentChild, ContentChildren, EventEmitter, Input, NgZone, Output, ViewChild, Self, NgModule } from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Subject, merge, Subscription, asapScheduler, of } from 'rxjs';\nimport { trigger, state, style, animate, transition, query, group } from '@angular/animations';\nimport { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { mixinDisabled, mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { startWith, switchMap, take, delay, filter, takeUntil } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r1._handleKeydown($event)); })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r3.closed.emit(\"click\")); })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r4._isAnimating = true); })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r5._onAnimationDone($event)); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n} }\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement; /** @type {?} */\n        ((\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatMenuContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n  @type {?} */\nconst matMenuAnimations = {\n    /**\n       * This animation controls the menu panel's entry and exit from the page.\n       *\n       * When the menu panel is added to the DOM, it scales in and fades in its border.\n       *\n       * When the menu panel is removed from the DOM, it simply fades out after a brief\n       * delay to display the ripple.\n       */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content', animate('100ms linear', style({ opacity: 1 }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n       * This animation fades in the background color and content of the menu panel\n       * after its containing element is scaled in.\n       */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/** *\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n  @type {?} */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/** *\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n  @type {?} */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n  @type {?} */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @return {?}\n     */\n    focus(origin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        }\n        else {\n            this._getHostElement().focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [\"role\", \"menuitem\", 1, \"mat-menu-item\"], hostVars: 7, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, dependencies: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{ selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    'role': 'menuitem',\n                    'class': 'mat-menu-item',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    '(click)': '_checkDisabled($event)',\n                    '(mouseenter)': '_handleMouseEnter()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content><div class=\\\"mat-menu-ripple\\\" matRipple [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token to be used to override the default options for `mat-menu`.\n  @type {?} */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/** *\n * Start elevation for the menu panel.\n * \\@docs-private\n  @type {?} */\nconst MAT_MENU_BASE_ELEVATION = 4;\nclass MatMenu {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Menu items inside the current menu.\n         */\n        this._items = [];\n        /**\n         * Emits whenever the amount of menu items changes.\n         */\n        this._itemChanges = new Subject();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj, className) => {\n                obj[className] = true;\n                return obj;\n            }, {});\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this._items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        return this._itemChanges.pipe(startWith(this._items), switchMap(items => merge(...items.map(item => item._hovered))));\n    }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    this._keyManager.setFocusOrigin('keyboard');\n                }\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        }\n        else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Registers a menu item with the menu.\n     * \\@docs-private\n     * @param {?} item\n     * @return {?}\n     */\n    addItem(item) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mat-menu` ancestor. If we used `@ContentChildren(MatMenuItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level menu in the case where the consumer\n        // has `mat-menu` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @param {?} item\n     * @return {?}\n     */\n    removeItem(item) {\n        /** @type {?} */\n        const index = this._items.indexOf(item);\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the menu already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\nMatMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenu, selectors: [[\"mat-menu\"]], contentQueries: function MatMenu_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function MatMenu_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu }\n        ])], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, dependencies: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media screen and (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}.mat-menu-panel.ng-animating .mat-menu-item-submenu-trigger{pointer-events:none}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\nMatMenu.propDecorators = {\n    backdropClass: [{ type: Input }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem,] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Component,\n        args: [{ selector: 'mat-menu', template: \"<ng-template><div class=\\\"mat-menu-panel\\\" [ngClass]=\\\"_classList\\\" (keydown)=\\\"_handleKeydown($event)\\\" (click)=\\\"closed.emit('click')\\\" [@transformMenu]=\\\"_panelAnimationState\\\" (@transformMenu.start)=\\\"_isAnimating = true\\\" (@transformMenu.done)=\\\"_onAnimationDone($event)\\\" tabindex=\\\"-1\\\" role=\\\"menu\\\"><div class=\\\"mat-menu-content\\\"><ng-content></ng-content></div></div></ng-template>\", changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ], providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu }\n                ], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0}@media screen and (-ms-high-contrast:active){.mat-menu-panel{outline:solid 1px}}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}@media screen and (-ms-high-contrast:active){.mat-menu-item-highlighted,.mat-menu-item.cdk-keyboard-focused,.mat-menu-item.cdk-program-focused{outline:dotted 1px}}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:'';display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}.mat-menu-panel.ng-animating .mat-menu-item-submenu-trigger{pointer-events:none}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MatMenuContent]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Injection token that determines the scroll handling while the menu is open.\n  @type {?} */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** *\n * \\@docs-private\n  @type {?} */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** *\n * Default top padding of the menu panel.\n  @type {?} */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closeSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.onMenuClose = this.menuClosed;\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this.menu.close.asObservable().subscribe(reason => {\n            this._destroyMenu();\n            // If a click closed the menu, we should close the entire chain of nested menus.\n            if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                this._parentMenu.closed.emit(reason);\n            }\n        });\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._cleanUpSubscriptions();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._setPosition(/** @type {?} */ (overlayRef.getConfig().positionStrategy));\n        overlayRef.attach(this._portal);\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @return {?}\n     */\n    focus(origin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin);\n        }\n        else {\n            this._element.nativeElement.focus();\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe(() => /** @type {?} */ ((menu.lazyContent)).detach(), undefined, () => {\n                    // No matter whether the content got re-attached, reset the menu.\n                    this._resetMenu();\n                });\n            }\n            else {\n                this._resetMenu();\n            }\n        }\n        else {\n            this._resetMenu();\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @return {?}\n     */\n    _resetMenu() {\n        this._setIsMenuOpen(false);\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        }\n        else if (!this.triggersSubmenu()) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = null;\n    }\n    /**\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(/** @type {?} */ (config.positionStrategy));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel'),\n            hasBackdrop: this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop,\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above'; /** @type {?} */\n                ((this.menu.setPositionClasses))(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Cleans up the active subscriptions.\n     * @return {?}\n     */\n    _cleanUpSubscriptions() {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = /** @type {?} */ ((this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = /** @type {?} */ ((this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\"], hostVars: 1, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"touchstart\", function MatMenuTrigger_touchstart_HostBindingHandler() { return ctx._openedBy = \"touch\"; })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null);\n    } }, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(touchstart)': '_openedBy = \"touch\"',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); };\nMatMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                ],\n                exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule]; }, exports: function () { return [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { MAT_MENU_SCROLL_STRATEGY, MatMenuModule, MatMenu, MAT_MENU_DEFAULT_OPTIONS, MatMenuItem, MatMenuTrigger, matMenuAnimations, fadeInItems, transformMenu, MatMenuContent, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵa21, MatMenuItemBase as ɵb21, _MatMenuItemMixinBase as ɵc21, MAT_MENU_PANEL as ɵf21, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵd21, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵe21 };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}